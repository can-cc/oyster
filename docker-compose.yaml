version: "3.2"
services:
  redis:
    restart: always
    image: redis
    command: redis-server --appendonly yes
    volumes:
      - ~/docker-data/redis:/data
    networks: 
      - app
  postgres:
    restart: always
    image: postgres
    networks: 
      - app
    environment:
      POSTGRES_PASSWORD: mysecretpassword
    volumes:
      - ~/docker-data/pgdata:/var/lib/postgresql/data
  nginx:
    restart: always
    image: fwchen/oyster-client:latest
    ports:
      - "8070:80"
    networks: 
      - app
    links:
      - backend:backend
  backend:
    restart: always
    image: fwchen/oyster-server:latest
    networks: 
      - app
    environment:
      REDIS_HOST: redis
      POSTGRES_HOST: postgres
      VAPID_DETAIL_EMAIL: ${VAPID_DETAIL_EMAIL}
    volumes:
      - ./config:/config
      - ./log:/log
    depends_on:
      - postgres
  filebeat:
    restart: always
    image: fwchen/oyster-filebeat:latest
    environment:
      ES_HOSTS: ${OYSTER_FILEBEAT_ES_HOSTS} 
      ES_USERNAME: ${OYSTER_FILEBEAT_ES_USERNAME}
      ES_PASSWORD: ${OYSTER_FILEBEAT_ES_PASSWORD}
    volumes:
      - ./log:/var/log/oyster
      - ~/docker-data/filebeat-data:/filebeat/data
  backup:
    restart: always
    image: fwchen/postgreseafile-backup:latest
    links:
      - postgres:postgres
    networks: 
      - app
    environment:
      BACKUP_HOST: postgres
      PGPASSWORD: mysecretpassword
      SEAFILE_API: ${SEAFILE_API}
      BACKUP_TIME: ${BACKUP_TIME}
      SEAFILE_TOKEN: ${SEAFILE_TOKEN}
    depends_on:
      - postgres

networks:
  app:
